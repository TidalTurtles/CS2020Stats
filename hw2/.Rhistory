Group <- c(1,1,1,2,2,2,3,3,3)
Gender <-c(1,1,1,1,1,2,2,2,2)
Age <- c(17, 19, 21, 37, 18, 19, 47, 18, 19)
Score <- c(12, 10, 11, 15, 16, 14, 25, 21, 29)
Genderx = c()
Groupx <- c()
Groupx[Group==1] = 'group 1'
Groupx[Group==2] = 'group 2'
Groupx[Group==3] = 'group 3'
Genderx[Gender ==1]='male'
Genderx[Gender ==2]='female'
Groupx
Genderx
expt <- data.frame ( age, Genderx, Groupx, score )
expt
expt <- data.frame ( Age, Genderx, Groupx, score )
expt <- data.frame ( Age, Genderx, Groupx, Score )
expt
expt$score
expt$Score
names(expt)
str(expt)
df<-data.frame(x = c(1,2,NA), y = rep(NA, 3))
print("dataframe is ")
print(df)
print("vector is")
vec = is.na(df[,1])
print(vec)
count = sum(vec)
print("count of NA in first column is" )
print(count)
df<-data.frame(x = c("kapil","rahul",NA,NA), y = c(1,2,NA,3))
print("dataframe is ")
print(df)
print("vector is")
vec = is.na(df[,1])
print(vec)
count = sum(vec)
print("count of NA in first column is" )
print(count)
View(df)
View(df)
# range from 10 to 50
values = 10:50
# vector elements of character type
names = c("sravan", "bobby", "ojaswi", "gnanu")
# data1 with list of elements
data1 = list(1, 2, 3, 4, 5)
# give input to the data which is a list
data = list(values, names, data1)
# display
print(data)
# range from 10 to 50
values = 10:50
# vector elements of character type
names = c("sravan", "bobby", "ojaswi", "gnanu")
# data1 with list of elements
data1 = list(1, 2, 3, 4, 5)
# give input to the data which is a list
data = list(values, names, data1)
# display
print(data)
View(data1)
View(data1)
names(data)
print(length(data))
print(lengths(data))
# Creating a vector
x1 <- c(3, 5, 3, 7, 9, 4, 6)
x2 <- c(-1, -4, 2.4, 6, -7)
# Calling tabulate() function
tabulate(x1)
tabulate(x2)
# Creating a vector
x1 <- c(3, 5, 3, 7, 9, 4, 6)
x2 <- c(-1, -4, 2.6, 6, -7, 35)
# Calling tabulate() function
tabulate(x1, nbins = 4)
tabulate(x2, nbins = 8)
x1
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
detach("package:tidyr", unload = TRUE)
library(tidyr)
library(dbplyr)
detach("package:dbplyr", unload = TRUE)
data <- data.frame(
emp_id = c (1,1,2,4,5,6,6),
emp_name = c("Rick","Dan","Michelle",
"Ryan","Gary","x" , "y"))
display(data)
duplicated(data$emp_id)
detach("package:tidyr", unload = TRUE)
library(tidyr)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
x1 <- c(1, 2, 3, -4, 5)
any(x1<0)
x1 <- c(1, 2, 3, -4, 5, NA)
any(x1<0)
x2 <- c(1, 2, 3, -4, 5, NA)
any(x2 < -10)
any(x2<-10, na.rm= TRUE)
any(x2< -10, na.rm= TRUE)
gfg <- "Geeks For Geeks"
answer <- nchar(gfg)
print(answer)
install.packages(lsr)
install.packages('lsr')
library(lsr)
load("aflsmall.Rdata")
load("aflsmall.Rdata")
who()
load("starwars.Rdata")
load("starwars")
library(lsr)
load( "aflsmall.Rdata" )
install.packages(‘lsr’)
Library(lsr)
load( "aflsmall.Rdata" )
library(lsr)
load( "aflsmall.Rdata" )
load( "aflsmall" )
load( "aflsmall.Rdata" )
install.packages(c("boot", "class", "codetools", "foreign", "MASS", "Matrix", "nlme", "spatial", "survival"))
load( "aflsmall.Rdata" )
load( "aflsmall.rd" )
load( "aflsmall.rdb" )
load( "afl.margins" )
###
#first set working directory to this one
#also can set with Rstudio but did in case whoever grades wants to use this instead
setwd("/Users/noah/Desktop/school/Spring 23/CS2020Stats/hw2")
### Packages
# Not sure wanted but used things from the following
library(dplyr)
# part a: load auto.csv
Auto <- read.csv("Auto.csv", na.strings = "?") # fixed it
print(Auto)
# part b: what is type/class of auto
typeof(Auto) # results in list
class(Auto) # results in data.frame
# part c: Use R command/func to find dimensions
attributes(Auto) # lists 9 names(ie col titles) and 397 row names(ie numbers)
length(Auto)
# part d: Remove any NA from data and repeat c
Auto <- na.omit(Auto)
attributes(Auto) # changed to 9 vars and 392 rows
# part e: report names of all vars in auto
colnames(Auto) # prints the 9 names
# part f: use attach() then plot cylindars/mpg
attach(Auto)
plot(Auto$cylinders, Auto$mpg, xlab = "Cylinders", ylab = "MPG") # looks weird so going to change
# part f: use attach() then plot cylindars/mpg
attach(Auto)
plot(Auto$cylinders, Auto$mpg, xlab = "Cylinders", ylab = "MPG") # looks weird so going to change
# part g: convert 'cylindars' to factor and plot
#     note: Make sure the results are draw with green color and the y and x axis of the graph
#           has “CYLINDERS” and “MPG” respectively
Auto$cylinders <- as.factor(Auto$cylinders)
plot(Auto$cylinders, Auto$mpg, xlab = "Cylinders", ylab = "MPG", col = "green")
# part h: Make histogram of mpg (fill with green)
#     note: make sure only 10 bars
hist(mpg, col="green", breaks=10) # got help from friend.
# part i: use pairs(), generate matrix plot, for each combo
#     hint on assignment page!!
pairs(~ mpg + displacement + horsepower + weight + acceleration, data = Auto) #gives 50+ warnings?!?!
# part i: use pairs(), generate matrix plot, for each combo
#     hint on assignment page!!
pairs(~ mpg + displacement + horsepower + weight + acceleration, data = Auto) #gives 50+ warnings?!?!
# part j: report descriptive statistics for all fields
summary(Auto)
